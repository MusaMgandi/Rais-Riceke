rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Check if user is authenticated
    function isAuth() {
      return request.auth != null;
    }
    
    // Check if user is admin
    function isAdmin() {
      return isAuth() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Users collection rules
    match /users/{userId} {
      allow read: if isAuth() && (request.auth.uid == userId || isAdmin());
      allow create: if isAuth() && request.auth.uid == userId;
      allow update: if isAuth() && request.auth.uid == userId;
      allow delete: if isAdmin();
    }

    // Products collection rules
    match /products/{productId} {
      allow read: if true; // Anyone can read products
      allow write: if isAdmin(); // Only admin can modify products
    }

    // Orders collection rules
    match /orders/{orderId} {
      allow read: if isAuth() && (
        request.auth.uid == resource.data.userId || isAdmin()
      );
      allow create: if isAuth();
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }

    // Notifications collection rules
    match /notifications/{notificationId} {
      allow read: if isAuth();
      allow write: if isAdmin();
    }
  }
}
